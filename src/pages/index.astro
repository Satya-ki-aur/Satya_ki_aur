---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabaseClient.js';

// Define a type for our video objects
interface Video {
	youtube_id: string;
	title: string; // English title
	title_hindi?: string; // Hindi title - using underscore for JS consistency
	// created_at?: string; // Add if you use it for ordering
}

let videos: Video[] = [];
const { data, error } = await supabase
	.from('Satya_ki_aur') // Your table name
	.select('youtube_id, title, "title hindi"') // Fetch English and Hindi titles
	// .order('created_at', { ascending: false }) // Uncomment and adjust if you have a created_at or similar column for ordering
	.limit(3); // Show recent videos

if (error) {
	console.error('Error fetching videos:', error.message);
} else if (data) {
	videos = data.map(video => ({ // Map data to ensure consistent key for Hindi title if needed
		...video,
		title_hindi: video["title hindi"] // Create a JS-friendly key
	})) as Video[];
}
---

<Layout title="Satya ki aur सत्य की ओर">
	<main class="flex flex-col items-center justify-center min-h-[calc(100vh-var(--header-height,80px))] bg-sky-200 text-center p-4">
		<img src="/Channel Logo.jpg" alt="Satya ki aur Logo" class="h-32 w-32 md:h-40 md:w-40 rounded-full mb-8" />
		<h1 class="text-6xl md:text-8xl font-bold mb-6 NotoSerifDevanagari text-slate-800">सत्य की ओर</h1>
		<p class="text-xl md:text-2xl text-slate-700">Exploring the path to truth through wisdom and understanding</p>
	</main>

	<!-- Latest Teachings Section -->
	<section class="py-12 md:py-16 bg-blue-100">
		<div class="container mx-auto px-4 md:px-8 lg:max-w-4xl xl:max-w-5xl">
			<h2 class="text-3xl md:text-4xl font-bold text-center mb-10 text-blue-800">Latest Teachings</h2>
			{videos.length > 0 ? (
				<ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
					{videos.map((video) => (
						<li class="list-none bg-white rounded-lg shadow-md overflow-hidden flex flex-col video-card" data-astro-key={video.youtube_id}>
							<div class="video-thumbnail-container w-full aspect-video relative cursor-pointer group">
								<img 
									src={`https://img.youtube.com/vi/${video.youtube_id}/mqdefault.jpg`} 
									alt={`Thumbnail for ${video.title}`} 
									class="video-thumbnail w-full h-full object-cover absolute inset-0" 
									data-youtube-id={video.youtube_id} 
									onerror="this.style.display='none'; const overlay = this.parentElement.querySelector('.play-icon-overlay'); if (overlay) { overlay.style.opacity = '1'; overlay.classList.remove('opacity-0'); }" 
								/>
								<div class="play-icon-overlay absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none z-10">
									<svg class="w-16 h-16 text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8.118v3.764a1 1 0 001.555.832l3.197-1.882a1 1 0 000-1.664l-3.197-1.882z" clip-rule="evenodd"></path></svg>
								</div>
								<div class="video-player-container absolute inset-0 w-full h-full z-20"></div>
							</div>
							<div class="px-3 py-1">
								<h3 class="text-base font-semibold text-blue-700 mb-1">
									{video.title}
								</h3>
								{video.title_hindi && (
									<h3 class="text-base font-semibold text-blue-700 mb-1 NotoSerifDevanagari">
										{video.title_hindi}
									</h3>
								)}
							</div>
						</li>
					))}
				</ul>
			) : (
				<p class="text-center text-blue-600">No teachings found at the moment. Please check back later.</p>
			)}
		</div>
	</section>
</Layout>

<style>
	:root {
		--header-height: 80px; /* Adjust if your header height changes */
	}
	.NotoSerifDevanagari {
		font-family: 'Noto Serif Devanagari', serif; /* Ensure this font is available */
	}
	.video-player-container iframe {
		width: 100%;
		height: 100%;
	}
</style>

<script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelectorAll('.video-thumbnail-container').forEach(container => {
			container.addEventListener('click', function() {
				const playerContainer = this.querySelector('.video-player-container');
				const imgThumbnail = this.querySelector('.video-thumbnail');
				const youtubeId = imgThumbnail ? imgThumbnail.dataset.youtubeId : null;
				const playIconOverlay = this.querySelector('.play-icon-overlay');

				if (!youtubeId) {
					console.error('YouTube ID not found for this video.');
					return;
				}

				if (!playerContainer.querySelector('iframe')) { 
					if(imgThumbnail) imgThumbnail.style.opacity = '0'; 
					if(playIconOverlay) playIconOverlay.style.opacity = '0';

					const iframe = document.createElement('iframe');
					iframe.setAttribute('src', `https://www.youtube.com/embed/${youtubeId}?autoplay=1&rel=0&modestbranding=1&showinfo=0`);
					iframe.setAttribute('frameborder', '0');
					iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share');
					iframe.setAttribute('allowfullscreen', '');
					iframe.style.width = '100%';
					iframe.style.height = '100%';
					iframe.style.position = 'absolute';
					iframe.style.top = '0';
					iframe.style.left = '0';
					
					playerContainer.appendChild(iframe);
				} 
			});
		});
	});
</script>
